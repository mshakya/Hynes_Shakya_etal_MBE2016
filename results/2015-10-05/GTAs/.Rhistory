add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#13. orfg7
colorBranch(orfg7, list(c(72:92),c(20),c(101)),
col=c("#d95f02", "#377eb8", "red"),
type="unrooted", show.tip.label=FALSE,
x.lim=lim[9,], y.lim=lim[9,])
add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#14. orfg8
colorBranch(orfg8, list(c(29:49),c(28), c()),
col=c("#d95f02", "#377eb8", "red"),
type="unrooted", show.tip.label=FALSE,
x.lim=lim[10,], y.lim=lim[10,])
add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#15. orfg9
plot.new()
text(0.5, 0.5, "no viral homologs detected", pos=3, cex=4)
box()
#16. orfg10
plot.new()
text(0.5, 0.5, "no viral homologs detected", pos=3, cex=4)
box()
#17. orfg10.1
plot.new()
text(0.5, 0.5, "no viral homologs detected", pos=3, cex=4)
box()
#18. orfg11
colorBranch(orfg11, list(c(1:10,12:21), c(), c(11)),
col=c("#d95f02", "#377eb8", "red"),
type="unrooted", show.tip.label=FALSE,
x.lim=lim[11,], y.lim=lim[11,])
add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#19. orfg12
colorBranch(orfg12, list(c(7:27), c(2:6,35),c(28:33)),
col=c("#d95f02", "#377eb8", "red"),
type="unrooted", show.tip.label=FALSE,
x.lim=lim[12,], y.lim=lim[12,])
add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#20. orfg13
colorBranch(orfg13, list(c(45:65),c(1:3,20:23,66:68),c()),
col=c("#d95f02", "#377eb8", "red"),
type="unrooted", show.tip.label=FALSE,
x.lim=lim[13,], y.lim=lim[13,])
add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#21. orfg14
colorBranch(orfg14, list(c(12:32),c(7:11, 33:36),c(1:6, 108:109)),
col=c("#d95f02", "#377eb8", "red"),
type="unrooted", show.tip.label=FALSE,
x.lim=lim[14,], y.lim=lim[14,])
add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#22. orfg15
colorBranch(orfg15, list(c(15:34), c(1:2,35:40), c()),
col=c("#d95f02", "#377eb8", "red"),
type="unrooted", show.tip.label=FALSE,
x.lim=lim[15,], y.lim=lim[15,])
add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#23. rcc1865
colorBranch(rcc1865, list(c(1:18,20:21), c(19),c()),
col=c("#d95f02", "#377eb8", "red"),
type="unrooted", show.tip.label=FALSE,
x.lim=lim[16,], y.lim=lim[16,])
add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#24. rcc1866
colorBranch(rcc1866, list(c(1:17,19:20), c(18), c(21)),
col=c("#d95f02", "#377eb8", "red"),
type="unrooted", show.tip.label=FALSE,
x.lim=lim[17,], y.lim=lim[17,])
add.scale.bar(0,0,0.5, lwd=3, cex=4)
box()
#25 rcc2730
plot.new()
text(0.5, 0.5, "no viral homologs detected", pos=3, cex=4)
box()
#26
plot.new()
text(0.5, 0.5, "rcc00171", cex=8)
box()
#27
plot.new()
text(0.5, 0.5, "rcc00555", cex=8)
box()
#28
plot.new()
text(0.5, 0.5, "rcc00556", cex=8)
box()
#29
plot.new()
text(0.5, 0.5, "rcc01079", cex=8)
box()
#30
plot.new()
text(0.5, 0.5, "rcc01080", cex=8)
box()
#31
plot.new()
text(0.5, 0.5, "rcc01682 (g1)", cex=8)
box()
#32
plot.new()
text(0.5, 0.5, "rcc01683 (g2)", cex=8)
box()
#33
plot.new()
text(0.5, 0.5, "rcc01684 (g3)", cex=8)
box()
#34
plot.new()
text(0.5, 0.5, "rcc01685 (g3.5)", cex=8)
box()
#35
plot.new()
text(0.5, 0.5, "rcc01686 (g4)", cex=8)
box()
#36
plot.new()
text(0.5,0.5,"rcc01687 (g5)",cex=8)
box()
#37
plot.new()
text(0.5, 0.5, "rcc01688 (g6)", cex=8)
box()
#38
plot.new()
text(0.5, 0.5, "rcc01689 (g7)", cex=8)
box()
#39
plot.new()
text(0.5, 0.5, "rcc01690 (g8)", cex=8)
box()
#40
plot.new()
text(0.5, 0.5, "rcc01691 (g9)", cex=8)
box()
#41
plot.new()
text(0.5, 0.5, "rcc01692 (g10)", cex=8)
box()
#42
plot.new()
text(0.5, 0.5, "rcc01693 (g10.1)", cex=8)
box()
#43
plot.new()
text(0.5, 0.5, "rcc01694 (g11)", cex=8)
box()
#44
plot.new()
text(0.5, 0.5, "rcc01695 (g12)", cex=8)
box()
#45
plot.new()
text(0.5, 0.5, "rcc01696 (g13)", cex=8)
box()
#46
plot.new()
text(0.5, 0.5, "rcc01697 (g14)", cex=8)
box()
#47
plot.new()
text(0.5, 0.5, "rcc01698 (g15)", cex=8)
box()
#48
plot.new()
text(0.5, 0.5, "rcc01865", cex=8)
box()
#49
plot.new()
text(0.5, 0.5, "rcc01866", cex=8)
box()
#50
plot.new()
text(0.5, 0.5, "rcc02730", cex=8)
box()
#51
plot.new()
legend(0.5, 0.9, title="RcGTA homologs from: ", border = "black", cex=4, bty="n",
c("Rhodobacterales bacteria", "Rhodobacterales phages",
"other alphaproteobacterial phages",
"all other phages"),
fill = c("#d95f02", "#377eb8", "red", "black"))
dev.off()
#required packages
require(optparse)
require(ggplot2)
require(reshape2)
require(gridExtra)
require(plyr)
# R script that plots density plot of pairwise distance between gta genes and phage genes.
plot_density <- function(df, df1,...){
#df1 corresponds to another separate dataframe with one column
#melt the dataframe
df_melt <- melt(df, value.name="phylogenetic.distance")
df1_melt <- melt(df1, value.name="phylogenetic.distance")
df_all<-rbind.fill(df_melt, df1_melt)
# Mann whitney U test
gta_phage_MUtest <- wilcox.test(df$pairwise_gta, df$pairwise_phage)
gta_core_MUtest <- wilcox.test(df$pairwise_gta, df1$core_genes)
core_phage_MUtest <- wilcox.test(df$pairwise_phage, df1$core_genes)
print(gta_phage_MUtest$p.value)
print(gta_core_MUtest$p.value)
print(core_phage_MUtest$p.value)
# calculate medians
gta_median <- median(df$pairwise_gta, na.rm=TRUE)
phage_median <- median(df$pairwise_phage, na.rm=TRUE)
core_median <- median(df1$core_genes, na.rm=TRUE)
delta_phage_gta = median(df$pairwise_gta, na.rm=TRUE) - median(df$pairwise_phage, na.rm=TRUE)
delta_phage_single = median(df$pairwise_phage, na.rm=TRUE) - median(df1$core_genes, na.rm=TRUE)
delta_gta_single = median(df$pairwise_gta, na.rm=TRUE) - median(df1$core_genes, na.rm=TRUE)
print(c(delta_phage_gta, delta_phage_single, delta_gta_single))
#
gta_y <- max(density(df$pairwise_gta, na.rm=TRUE)$y)
phage_y <- max(density(df$pairwise_phage, na.rm=TRUE)$y)
single_y <- max(density(df1$core_genes, na.rm=TRUE)$y)
# main plot function
ggplot(df_all, aes(phylogenetic.distance, fill=variable)) +
geom_density(alpha=0.6) +
scale_fill_manual(values = c("#9999cc", "#ff9933", "#2ca25f")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title.x=element_text(face="bold", size=30),
axis.title.y=element_text(face="bold", size=30),
axis.text.x=element_text(size=25),
axis.text.y=element_text(size=25)) +
annotate("text", x=gta_median, y=gta_y, size=15, colour="#9999cc", label=round(gta_median, 2)) +
annotate("text", x=phage_median, y=phage_y, size=15, colour="#ff9933", label=round(phage_median, 2)) +
annotate("text", x=core_median, y=single_y, size=15, colour="#2ca25f", label=round(core_median, 2))
#   annotate("segment", x=gta_median, xend=gta_median, y=0, yend= gta_y, size=1.5, colour="#9999cc") +
#   annotate("segment", x=phage_median, xend=phage_median, y=0, yend= phage_y, size=1.5, colour="#ff9933") +
#   annotate("segment", x=core_median, xend=core_median, y=0, yend= single_y, size=1.5, colour="#2ca25f")
}
# this was manually calculated
#median of all medians
median(c(0.7,1.04,0.81,1.25,0.71,1.18,1,1.04,0.83,0.99,1.13,1))
# mean and median of differences between GTA genes and phage genes
mean(2.40393287 ,5.8773717,5.5452713,3.5256063,4.86931060,3.3530010,2.0301567,2.834848,1.2673514,1.4266785,1.5081788,1.5816612)
median(c(2.40393287 ,5.8773717,5.5452713,3.5256063,4.86931060,3.3530010,2.0301567,2.834848,1.2673514,1.4266785,1.5081788,1.5816612))
# mean and median of differences between GTA genes and core genes
mean(0.04751328, 0.3884371, 0.1641608, 0.5975882, 0.05687453, 0.5329002, 0.3525827, 0.392750,  0.1841689, 0.3371757,  0.4843852,  0.3513467)
median(c(0.04751328, 0.3884371, 0.1641608, 0.5975882, 0.05687453, 0.5329002, 0.3525827, 0.392750,  0.1841689, 0.3371757,  0.4843852,  0.3513467))
pdf("test.pdf", 50,55)
##################read table ##################
#read single copy core genes distances
single <- read.table("all_single_distances.txt")
single$V2 <- NULL
colnames(single) <- c("core_genes")
#1. rcc171
#not many phage homologs
#2. rcc555
rcc555 <- read.table("GTAs/endo_dir/endo_gta_distance.txt", header=TRUE)
#3.
#4. rcc1079
# not many phage homologs
#5. rcc1080
#no viral homologs
#6. orfg1
#no viral homologs
#7. orfg2
orfg2<-read.table("GTAs/orfg2_dir/orfg2_gta_distance.txt", header=TRUE)
#8. orfg3
orfg3 <- read.table("GTAs/orfg3_dir/orfg3_gta_distance.txt", header=TRUE)
#9. orfg4
orfg4 <- read.table("GTAs/orfg4_dir/orfg4_gta_distance.txt", header=TRUE)
#13. orfg5
orfg5 <- read.table("GTAs/orfg5_dir/orfg5_gta_distance.txt", header=TRUE)
#12. orfg6
orfg6 <- read.table("GTAs/orfg6_dir/orfg6_gta_distance.txt", header=TRUE)
#13. orfg7
orfg7 <- read.table("GTAs/orfg7_dir/orfg7_gta_distance.txt", header=TRUE)
#14. orfg8
orfg8 <- read.table("GTAs/orfg8_dir/orfg8_gta_distance.txt", header=TRUE)
#15. orfg9
#no viral homologs
#16. orfg10
#no viral homologs
#17. orfg10.1
#no viral homologs
#18. orfg11
#no viral homologs
#19. orfg12
orfg12 <- read.table("GTAs/orfg12_dir/orfg12_gta_distance.txt", header=TRUE)
#20. orfg13
orfg13 <- read.table("GTAs/orfg13_dir/orfg13_gta_distance.txt", header=TRUE)
#21. orfg14
orfg14 <- read.table("GTAs/orfg14_dir/orfg14_gta_distance.txt", header=TRUE)
#22. orfg15
orfg15 <- read.table("GTAs/orfg15_dir/orfg15_gta_distance.txt", header=TRUE)
#23. rcc1865
#rcc1865<-read.table("GTAs/rcc1865_dir/rcc1865_gta_distance.txt", header=TRUE)
#24. rcc1866
#rcc1866<-read.table("GTAs/rcc1866_dir/rcc1866_gta_distance.txt", header=TRUE)
####################plot trees#########################
#1 rcc171
rcc171_plot <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("rcc00171") + theme(plot.title=element_text(face="bold", size=40)) +
annotate("text", x = 4, y = 20, label = "not enough viral homologs", size=15)
#2.rcc555
rcc555_plot <- plot_density(rcc555,single) +
ggtitle("rcc00555") + theme(plot.title=element_text(face="bold", size=40)) +
theme(legend.position=c(0.5, 0.5), legend.text = element_text(size=30), legend.title = element_blank())
#3. rcc556
rcc556_plot <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("rcc00556") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "no viral homologs", size=15)
#4.rcc1079
rc1079_plot <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("rcc01079") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "not enough viral homologs", size=15)
#5. rcc1080
rcc1080_plot <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("rcc01080") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "not enough viral homologs", size=15)
#6. orfg1
orfg1_plot<- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("orfg1") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "no viral homologs", size=15)
#7. orfg2
orfg2_plot <- plot_density(orfg2, single)+
ggtitle("orfg2") + theme(plot.title=element_text(face="bold", size=40))
#8. orfg3
orfg3_plot <- plot_density(orfg3, single)+
ggtitle("orfg3") + theme(plot.title=element_text(face="bold", size=40))
#9. orfg3.5
orfg3.5_plot <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("orfg3.5") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "no viral homologs", size=15)
#10. orfg4
orfg4_plot <- plot_density(orfg4, single)+
ggtitle("orfg4") + theme(plot.title=element_text(face="bold", size=40))
# plot_density(orfg4)
#11. orfg5
orfg5_plot <- plot_density(orfg5, single) +
ggtitle("orfg5") + theme(plot.title=element_text(face="bold", size=40))
#12. orfg6
orfg6_plot <- plot_density(orfg6, single) +
ggtitle("orfg6") + theme(plot.title=element_text(face="bold", size=40))
#13. orfg7
orfg7_plot <- plot_density(orfg7, single) +
ggtitle("orfg7") + theme(plot.title=element_text(face="bold", size=40))
#14. orfg8
orfg8_plot <- plot_density(orfg8, single)+
ggtitle("orfg8") + theme(plot.title=element_text(face="bold", size=40))
#15. orfg9
orfg9_plot<-ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("orfg9") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "not enough viral homologs", size=15)
#16. orfg10
orfg10_plot<- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("orfg10") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "no viral homologs", size=15)
#17. orfg10.1
orfg10.1_plot <-ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("orfg10.1") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "no viral homologs", size=15)
#18. orfg11
orfg11_plot <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("orfg11") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "no viral homologs", size=15)
#19. orfg12
orfg12_plot <- plot_density(orfg12, single)+
ggtitle("orfg12") + theme(plot.title=element_text(face="bold", size=40))
#20. orfg13
orfg13_plot <- plot_density(orfg13, single)+
ggtitle("orfg13") + theme(plot.title=element_text(face="bold", size=40))
#21. orfg14
orfg14_plot <- plot_density(orfg14, single)+
ggtitle("orfg14") + theme(plot.title=element_text(face="bold", size=40))
#22. orfg15
orfg15_plot <- plot_density(orfg15, single) +
ggtitle("orfg15") + theme(plot.title=element_text(face="bold", size=40))
#23. rcc1865
rcc1865_plot <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("rcc01865") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "not enough viral homologs", size=15)
#24. rcc1866
rcc1866_plot <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("rcc01866") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "not enough viral homologs", size=15)
#25 rcc2730
rcc2730_plot <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x =element_blank(), axis.text.y=element_blank(),
axis.ticks=element_blank(), axis.title.x=element_blank(),
axis.title.y=element_blank()) +
ggtitle("rcc02730") + theme(plot.title=element_text(face="bold", size=40))+
annotate("text", x = 3, y = 20, label = "no viral homologs", size=15)
grid.arrange(rcc171_plot, rcc555_plot, rcc556_plot,rc1079_plot, rcc1080_plot,
orfg1_plot, orfg2_plot, orfg3_plot, orfg3.5_plot, orfg4_plot,
orfg5_plot, orfg6_plot, orfg7_plot, orfg8_plot, orfg9_plot,
orfg10_plot, orfg10.1_plot, orfg11_plot, orfg12_plot, orfg13_plot,
orfg14_plot, orfg15_plot, rcc1865_plot, rcc1866_plot, rcc2730_plot, ncol=5)
# #51
# plot.new()
# legend(0.5, 0.9, title="RcGTA homologs from: ", border = "black", cex=4, bty="n",
#        c("Rhodobacterales bacteria", "Rhodobacterales phages",
#          "other alphaproteobacterial phages",
#          "all other phages"),
#        fill = c("#1b9e77", "#d95f02", "red", "black")) +
ggtitle("rcc00171") + theme(plot.title=element_text(face="bold", size=40))
dev.off()
plot_density <- function(df, df1,...){
#df1 corresponds to another separate dataframe with one column
#melt the dataframe
df_melt <- melt(df, value.name="phylogenetic.distance")
df1_melt <- melt(df1, value.name="phylogenetic.distance")
df_all<-rbind.fill(df_melt, df1_melt)
# Mann whitney U test
gta_phage_MUtest <- wilcox.test(df$pairwise_gta, df$pairwise_phage)
gta_core_MUtest <- wilcox.test(df$pairwise_gta, df1$core_genes)
core_phage_MUtest <- wilcox.test(df$pairwise_phage, df1$core_genes)
print(gta_phage_MUtest$p.value)
print(gta_core_MUtest$p.value)
print(core_phage_MUtest$p.value)
# calculate medians
gta_median <- median(df$pairwise_gta, na.rm=TRUE)
phage_median <- median(df$pairwise_phage, na.rm=TRUE)
core_median <- median(df1$core_genes, na.rm=TRUE)
delta_phage_gta = median(df$pairwise_gta, na.rm=TRUE) - median(df$pairwise_phage, na.rm=TRUE)
delta_phage_single = median(df$pairwise_phage, na.rm=TRUE) - median(df1$core_genes, na.rm=TRUE)
delta_gta_single = median(df$pairwise_gta, na.rm=TRUE) - median(df1$core_genes, na.rm=TRUE)
print(c(delta_phage_gta, delta_phage_single, delta_gta_single))
#
gta_y <- max(density(df$pairwise_gta, na.rm=TRUE)$y)
phage_y <- max(density(df$pairwise_phage, na.rm=TRUE)$y)
single_y <- max(density(df1$core_genes, na.rm=TRUE)$y)
# main plot function
ggplot(df_all, aes(phylogenetic.distance, fill=variable)) +
geom_density(alpha=0.6) +
scale_fill_manual(values = c("#ff9933","#9999cc", "#2ca25f")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title.x=element_text(face="bold", size=30),
axis.title.y=element_text(face="bold", size=30),
axis.text.x=element_text(size=25),
axis.text.y=element_text(size=25)) +
annotate("text", x=gta_median, y=gta_y, size=15, colour="#9999cc", label=round(gta_median, 2)) +
annotate("text", x=phage_median, y=phage_y, size=15, colour="#ff9933", label=round(phage_median, 2)) +
annotate("text", x=core_median, y=single_y, size=15, colour="#2ca25f", label=round(core_median, 2))
#   annotate("segment", x=gta_median, xend=gta_median, y=0, yend= gta_y, size=1.5, colour="#9999cc") +
#   annotate("segment", x=phage_median, xend=phage_median, y=0, yend= phage_y, size=1.5, colour="#ff9933") +
#   annotate("segment", x=core_median, xend=core_median, y=0, yend= single_y, size=1.5, colour="#2ca25f")
}
